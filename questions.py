# questions.py

questions = [
    "What is the difference between `var`, `let`, and `const`?",
    "Can you explain how closures work in JavaScript?",
    "What is the event loop in JavaScript, and how does it work?",
    "How does prototypal inheritance work in JavaScript?",
    "What are promises, and how do you use them?",
    "Can you explain the concept of 'hoisting' in JavaScript?",
    "What is the difference between `==` and `===` in JavaScript?",
    "How do you handle asynchronous code in JavaScript?",
    "What are arrow functions, and how do they differ from regular functions?",
    "What is a JavaScript module, and how do you create one?",
    "What is the purpose of the `this` keyword in JavaScript?",
    "How do you create and handle events in JavaScript?",
    "What are JavaScript decorators, and how are they used?",
    "What is the difference between `call`, `apply`, and `bind` methods?",
    "Can you explain the concept of 'currying' in JavaScript?",
    "How does the `new` keyword work in JavaScript?",
    "What is the `async/await` syntax, and how does it improve asynchronous code?",
    "What are JavaScript generators, and how do they work?",
    "Can you explain the difference between `null` and `undefined`?",
    "What are template literals, and how do you use them?",
    "How does garbage collection work in JavaScript?",
    "What is the difference between `forEach`, `map`, and `reduce`?",
    "What are JavaScript closures, and why are they important?",
    "How do you use `setTimeout` and `setInterval` in JavaScript?",
    "What is the purpose of the `Symbol` data type?",
    "How do you create and handle custom events in JavaScript?",
    "What are higher-order functions in JavaScript?",
    "What is the `spread` operator, and how is it used?",
    "How does JavaScript handle scope, and what are the different types?",
    "What is event delegation, and why is it useful?",
    "Can you explain the concept of 'debouncing' and 'throttling'?",
    "How do you manage state in a JavaScript application?",
    "What is the difference between synchronous and asynchronous code?",
    "How do you use the `fetch` API for making HTTP requests?",
    "What are JavaScript promises, and how do you chain them?",
    "Can you explain the difference between deep and shallow copying?",
    "How do you handle exceptions and errors in JavaScript?",
    "What is the purpose of the `strict mode` in JavaScript?",
    "How do you work with JSON in JavaScript?",
    "What is the difference between an array and an object in JavaScript?",
    "How do you implement inheritance in JavaScript?",
    "What is the role of callbacks in JavaScript?",
    "Can you explain how the `Array.prototype.reduce` method works?",
    "What is functional programming, and how does it relate to JavaScript?",
    "What are destructuring assignments, and how are they used?",
    "How do you optimize JavaScript performance?",
    "What is the `Proxy` object in JavaScript, and how do you use it?",
    "How does the DOM work in JavaScript?",
    "What is the difference between the DOM and the BOM?",
    "How do you handle cross-browser compatibility issues in JavaScript?",
    "What is a service worker, and how does it work?"
]
